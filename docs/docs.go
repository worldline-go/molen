// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/publish": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": [],
                        "OAuth2AccessCode": []
                    }
                ],
                "description": "Publish message(s) to kafka with topic and partition(optional)",
                "consumes": [
                    "application/json"
                ],
                "summary": "Publish message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "topic name",
                        "name": "topic",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "specific partition number",
                        "name": "partition",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "key",
                        "name": "key",
                        "in": "query"
                    },
                    {
                        "description": "send key values",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "type": "boolean",
                        "description": "raw body",
                        "name": "raw",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_server.APIRespond"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_server.APIRespond"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.APIRespond"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_server.APIRespond": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "[[ .Custom.authUrl ]]",
            "tokenUrl": "[[ .Custom.tokenUrl ]]"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "",
	Description:      "github.com/worldline-go/molen\nAuthorization as \"Bearer TOKEN\" or use oauth2 login",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
